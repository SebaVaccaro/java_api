package consola.Analista;

import SINGLETON.LoginSingleton;
import consola.Admin.*;
import consola.Psicopedagogo.EstudiantePsicoUI;
import consola.Psicopedagogo.FuncionarioPsicoUI;
import modelo.Usuario;
import servicios.FuncionarioServicio;
import consola.interfaz.UIBase;

public class AnalistaUI extends UIBase {

    private final FuncionarioServicio funcionarioServicio;

    public AnalistaUI() {
        FuncionarioServicio tempService = null;
        try {
            tempService = new FuncionarioServicio();
        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è Error al inicializar FuncionarioService: " + e.getMessage());
        }
        this.funcionarioServicio = tempService;
    }

    @Override
    public void mostrarMenu() {
        if (!LoginSingleton.getInstance().haySesionActiva()) {
            mostrarError("No hay sesi√≥n activa. Por favor inicia sesi√≥n.");
            return;
        }

        Usuario funcionario = LoginSingleton.getInstance().getUsuarioActual();

        System.out.println("\n===== MEN√ö ANALISTA DE EQUIPO =====");
        System.out.println("Bienvenido/a, " + funcionario.getNombre() + " " + funcionario.getApellido());
        System.out.println("====================================");
        System.out.println("1. Gesti√≥n de archivos adjuntos");
        System.out.println("2. Gesti√≥n de carreras");
        System.out.println("3. Gesti√≥n de ciudades");
        System.out.println("4. Gesti√≥n de direcciones");
        System.out.println("5. Gesti√≥n de estudiantes");
        System.out.println("6. Gesti√≥n de funcionarios");
        System.out.println("7. Gesti√≥n de grupos");
        System.out.println("8. Gesti√≥n de ITRs");
        System.out.println("9. Gesti√≥n de incidencias");
        System.out.println("10. Gesti√≥n de instancias");
        System.out.println("11. Gesti√≥n de notificaciones");
        System.out.println("12. Gesti√≥n de observaciones");
        System.out.println("13. Gesti√≥n de roles");
        System.out.println("14. Gesti√≥n de seguimientos");
        System.out.println("15. Gesti√≥n de tel√©fonos de usuarios");
        System.out.println("16. Gesti√≥n de participantes en seguimientos");
        System.out.println("17. Gesti√≥n de pertenece (Carrera ‚Üî ITR)");
        System.out.println("18. Gesti√≥n de recibe (Notificaci√≥n ‚Üî Usuario)");
        System.out.println("19. Gesti√≥n de tel√©fonos ITR");
        System.out.println("0. Cerrar sesi√≥n");
        System.out.println("====================================");
    }

    @Override
    protected void manejarOpcion(int opcion) {
        try {
            switch (opcion) {
                case 1 -> new ArchivoAdjuntoAdminUI().mostrarMenu();
                case 2 -> new CarreraAdminUI().mostrarMenu();
                case 3 -> new CiudadAdminUI().mostrarMenu();
                case 4 -> new DireccionAdminUI().mostrarMenu();
                case 5 -> new EstudiantePsicoUI().mostrarMenu();
                case 6 -> new FuncionarioPsicoUI().mostrarMenu();
                case 7 -> new GrupoAdminUI().mostrarMenu();
                case 8 -> new ITRAdminUI().mostrarMenu();
                case 9 -> new IncidenciaAdminUI().mostrarMenu();
                case 10 -> new InstanciaComunAdminUI().mostrarMenu();
                case 11 -> new NotificacionAdminUI().mostrarMenu();
                case 12 -> new ObservacionAdminUI().mostrarMenu();
                case 13 -> new RolAdminUI().mostrarMenu();
                case 14 -> new SeguimientoAdminUI().mostrarMenu();
                case 15 -> new TeleUsuarioAdminUI().mostrarMenu();
                case 16 -> new PartSeguimientoAdminUI().mostrarMenu();
                case 17 -> new PerteneceAdminUI().mostrarMenu();
                case 18 -> new RecibeAdminUI().mostrarMenu();
                case 19 -> new TeleITRAdminUI().mostrarMenu();
                case 0 -> {
                    mostrarInfo("üîí Cerrando sesi√≥n...");
                    LoginSingleton.getInstance().cerrarSesion();
                }
                default -> mostrarError("Opci√≥n inv√°lida. Intente nuevamente.");
            }
        } catch (Exception e) {
            mostrarError("‚ö†Ô∏è Error al ejecutar la opci√≥n: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // M√©todo de inicio simplificado usando UIBase
    public void iniciarSesion() {
        iniciar();
    }

}
